<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="snake">
    
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/snake</robotNamespace>
        </plugin>
    </gazebo>
    <!-- MACROS -->
    
    <xacro:property name="NumberOfElements" value="$(arg prefix)" />
    <xacro:property name="Radius" value="$(arg diam)" />
    <xacro:property name="Lenght_tot" value="$(arg leng)" />
    <xacro:property name="Lenght" value="${Lenght_tot-0.05}" />
    <xacro:property name="Mass_tot" value="$(arg mass)" />
    <xacro:property name="Mass1" value="${Mass_tot*Lenght/Lenght_tot}" />
    <xacro:property name="Mass2" value="${Mass_tot*0.05/Lenght_tot}" />
    <xacro:property name="mu" value="$(arg friction)" />
    <xacro:property name="maxeffort" value="$(arg max_effort)" />
    
    <xacro:macro name="body_link" params="base_name parent_name colour">
        
        <link name="${base_name}_aux">
            <inertial>
                <origin xyz="0 0 0.025" rpy="0 0 0"/>
                <mass value="${Mass2}" />
                <inertia ixx="${(Radius*Radius/4+0.05*0.05/12)*Mass2}" ixy="0.0" ixz="0.0" iyy="${(Radius*Radius/4+0.05*0.05/12)*Mass2}" iyz="0.0" izz="${Mass2*Radius*Radius/2}"/>
            </inertial>
            <collision>
                <origin xyz="0 0 0.025" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${Radius}" length="0.05"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 0.025" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${Radius}" length="0.05"/>
                </geometry>
            </visual>
    	</link>
    	
    	<gazebo reference="${base_name}_aux">
            <kp>1000000000.0</kp>
            <kd>1000000000.0</kd>
            <mu1>${mu}</mu1>
            <mu2>${mu}</mu2>
            <material>Gazebo/Black</material>
            <self_collide>0</self_collide>
        </gazebo>
    	
    	
        <link name="${base_name}">
     	    <inertial>
                <origin xyz="0 0 ${Lenght/2}" rpy="0 0 0"/>
                <mass value="${Mass1}" />
                <inertia ixx="${(Radius*Radius/4+Lenght*Lenght/12)*Mass1}" ixy="0.0" ixz="0.0" iyy="${(Radius*Radius/4+Lenght*Lenght/12)*Mass1}" iyz="0.0" izz="${Mass1*Radius*Radius/2}"/>
            </inertial>
            <collision>
                <origin xyz="0 0 ${Lenght/2}" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${Radius}" length="${Lenght}"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 ${Lenght/2}" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${Radius}" length="${Lenght}"/>
                </geometry>
            </visual>
    	</link>
    	
    	<gazebo reference="${base_name}">
            <kp>1000000000.0</kp>
            <kd>1000000000.0</kd>
            <mu1>${mu}</mu1>
            <mu2>${mu}</mu2>
            <material>Gazebo/${colour}</material>
            <self_collide>0</self_collide>
        </gazebo>
        
        <!-- We add to the Origin displacement a margin for flex due to self colisions for parent_name and base_name-->
        <joint name="${base_name}_aux_joint" type="revolute">
            <parent link="${parent_name}"/>
        	<child link="${base_name}_aux"/>
            <origin xyz="0 0 ${Lenght}" rpy="0 0 0"/>
            <limit lower="-1.5708" upper="1.5708" effort="${maxeffort}" velocity="0.5"/>
            <axis xyz="0 0 1"/>
    	</joint>
    	
        <joint name="${base_name}_joint" type="revolute">
    	    <parent link="${base_name}_aux"/>
        	<child link="${base_name}"/>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <limit lower="-1.5708" upper="1.5708" effort="${maxeffort}" velocity="0.5"/>
            <axis xyz="1 0 0"/>
    	</joint>
    	
    	
	    <transmission name="tran${base_name}_aux">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${base_name}_aux_joint">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor${base_name}_aux">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
        
        <transmission name="tran${base_name}">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${base_name}_joint">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor${base_name}">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    	
    </xacro:macro>
    
    
    
    <xacro:macro name="loop" params="links_qty">
        
        <xacro:if value="${links_qty > 0}">
            <xacro:body_link base_name="snake_body_${links_qty-1}" parent_name="snake_body_${links_qty}" colour="Orange"/>
            
            <xacro:if value="${links_qty}">
                <xacro:loop links_qty="${links_qty-1}" />
            </xacro:if>
        </xacro:if>
    </xacro:macro>
    

    
	<!-- * * * Link Definitions * * * -->
	
	<link name="startpt">
	<inertial>
            <origin xyz="0 0 0.005" rpy="0 0 0"/>
            <mass value="0.0001" />
            <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
        </inertial>
        <collision>
            <origin xyz="0 0 0.001" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${Radius}" length="0.002"/>
            </geometry>
        </collision>
        <visual>
            <origin xyz="0 0 0.001" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${Radius}" length="0.002"/>
            </geometry>
        </visual>
	</link>

    <gazebo reference="startpt">
        <kp>100000000000000.0</kp>
        <kd>100000000000000.0</kd>
        <mu1>${mu}</mu1>
        <mu2>${mu}</mu2>
        <material>Gazebo/Black</material>
        <self_collide>0</self_collide>
    </gazebo>

 <joint name="noreal" type="revolute">
    	    <parent link="startpt"/>
            <child link="snake_body_${NumberOfElements}"/>
            <origin xyz="0 0 0.002" rpy="0 0 0"/>
            <axis xyz="0 0 1"/>
    </joint>

	<link name="snake_body_${NumberOfElements}">
     	   <inertial>
                <origin xyz="0 0 ${Lenght/2}" rpy="0 0 0"/>
                <mass value="${Mass1}" />
                <inertia ixx="${(Radius*Radius/4+Lenght*Lenght/12)*Mass1}" ixy="0.0" ixz="0.0" iyy="${(Radius*Radius/4+Lenght*Lenght/12)*Mass1}" iyz="0.0" izz="${Mass1*Radius*Radius/2}"/>
            </inertial>
            <collision>
                <origin xyz="0 0 ${Lenght/2}" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${Radius}" length="${Lenght}"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 ${Lenght/2}" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${Radius}" length="${Lenght}"/>
                </geometry>
            </visual>
	</link>


    <gazebo reference="snake_body_${NumberOfElements}">
        <kp>100000000000000.0</kp>
        <kd>100000000000000.0</kd>
        <mu1>${mu}</mu1>
        <mu2>${mu}</mu2>
        <material>Gazebo/White</material>
        <self_collide>0</self_collide>
    </gazebo>
    
    <xacro:loop links_qty="${NumberOfElements}" />

</robot>
